apply plugin: 'com.android.library'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                targets "TensorFlow"
                abiFilters "x86_64"
                //targets "OpenCV"
                //abiFilters "x86_64", "x86", "armeabi-v7a", "arm64-v8a"//, "armeabi", "mips", "mips64"

                //arguments "-GUnix Makefiles"
                //arguments "-DCMAKE_MAKE_PROGRAM=make"
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                          'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path 'CMakeLists.txt'
        }
    }
}

import org.apache.tools.ant.taskdefs.condition.Os

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties')
                .newDataInputStream())
def ndkDir = properties.getProperty('ndk.dir')
if (ndkDir == null || ndkDir == "") {
    ndkDir = System.getenv('ANDROID_NDK_HOME')
}

if(! Os.isFamily(Os.FAMILY_WINDOWS)) {
    task buildTensorflow(type: Exec) {
        group 'buildTensorflowLib'
        workingDir '../distribution/tensorflow/tensorflow/'
        environment PATH: '/opt/local/bin:/opt/local/sbin:' +
                          System.getenv('PATH')
        environment NDK_ROOT: ndkDir
        commandLine 'tensorflow/contrib/makefile/build_all_android.sh'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:25.1.1'
}

